{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","getContact","reset","form","onSubmit","this","label","type","onChange","input","disabled","button","Component","Filter","filterValue","filterData","ContactList","contacts","removeContact","list","map","id","item","onClick","App","filter","addContact","data","newContact","shortid","generate","find","contact","toast","info","prevState","deleteContact","contactId","changeFilter","findContact","normalizedFilter","toLocaleLowerCase","toLowerCase","includes","userContacts","localStorage","getItem","parsedUserContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5edfa882.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2zRV2\",\"item\":\"ContactList_item__LpCyp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3lT3C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1n9Cg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2qLqK\",\"label\":\"ContactForm_label__2mBv_\",\"input\":\"ContactForm_input__jo6U-\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.getContact(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label className={s.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              className={s.input}\n            />\n          </label>\n\n          <label className={s.label}>\n            Number\n            <input\n              type=\"text\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              className={s.input}\n            />\n          </label>\n\n          <button\n            type=\"submit\"\n            disabled={!this.state.number}\n            className={s.button}\n          >\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  getContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filterValue, filterData }) => (\n  <label>\n    Find contacts by name\n    <input\n      type=\"text\"\n      value={filterValue}\n      onChange={filterData}\n      className={s.input}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  filterValue: PropTypes.string.isRequired,\n  filterData: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, removeContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={s.item}>\n        <p>{name}</p>\n        <p>{number}</p>\n        <button type=\"button\" onClick={() => removeContact(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  removeContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = data => {\n    const newContact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    const getDublicateContact = this.state.contacts.find(\n      contact => contact.name === newContact.name,\n    );\n\n    if (getDublicateContact) {\n      toast.info(`${newContact.name} is already in contacts!`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  findContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    const userContacts = localStorage.getItem('contacts');\n    const parsedUserContacts = JSON.parse(userContacts);\n    if (parsedUserContacts) {\n      this.setState({ contacts: parsedUserContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const filteredContacts = this.findContact();\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm getContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter\n          filterValue={this.state.filter}\n          filterData={this.changeFilter}\n        />\n        <ContactList\n          contacts={filteredContacts}\n          removeContact={this.deleteContact}\n        />\n        <ToastContainer autoClose={3000} />\n      </Container>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}